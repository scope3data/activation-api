---
title: "Understanding Brand Agents"
description: "Your advertiser account in Scope3 - the container for all your campaigns, creatives, and settings"
icon: "building"
---

# Brand Agents: Your Advertiser Account

<Frame>
  <img
    src="/images/brand-agent-hierarchy.svg"
    alt="Brand Agent Hierarchy"
    className="w-full"
  />
</Frame>

A **Brand Agent** is Scope3's equivalent of an advertiser account in traditional DSPs. It serves as the top-level container that owns and organizes all your advertising assets and configurations.

<Note>
**Coming from The Trade Desk or DV360?**

A Brand Agent is exactly like your Advertiser account - it's the top-level container that owns all your campaigns, creatives, audiences, and brand safety settings. The key difference is that Scope3's Brand Agents are designed for AI-powered management and natural language control.

</Note>

## What Brand Agents Contain

<Tabs>
  <Tab title="Campaigns">
    **Campaigns** are your individual budget allocation units - similar to Line Items in The Trade Desk or Insertion Orders in DV360.

    ```python
    # All campaigns belong to a brand agent
    campaigns = scope3.list_campaigns(brand_agent_id="ba_nike_123")

    # Create campaign within brand agent
    campaign = scope3.create_campaign(
        brand_agent_id="ba_nike_123",
        name="Summer Running Campaign",
        prompt="Target avid runners preparing for summer marathons"
    )
    ```

    **Key Benefits:**
    - Natural language campaign creation
    - AI-powered targeting and optimization
    - Automatic budget allocation and pacing
    - Real-time performance adjustments

  </Tab>

  <Tab title="Creatives">
    **Creatives** belong to the brand agent and can be used across any campaign within that brand agent.

    ```python
    # Upload creative to brand agent
    creative = scope3.create_creative(
        brand_agent_id="ba_nike_123",
        name="Summer Running Video",
        type="video",
        url="https://cdn.nike.com/summer-running-30s.mp4",
        headline="Push Your Limits",
        cta="Shop Now"
    )

    # Creative automatically available to all campaigns
    campaign = scope3.create_campaign(
        brand_agent_id="ba_nike_123",
        name="Video Campaign",
        prompt="Use our summer running video to target marathon enthusiasts",
        creative_ids=[creative['id']]
    )
    ```

    **Creative Sharing Benefits:**
    - No duplicate uploads across campaigns
    - Centralized creative performance analytics
    - Easy A/B testing across campaign contexts
    - Automatic creative optimization

  </Tab>

  <Tab title="Audiences">
    **Synthetic Audiences** are AI-enhanced targeting profiles that belong to the brand agent.

    ```python
    # Create synthetic audience
    audience = scope3.create_audience(
        brand_agent_id="ba_nike_123",
        name="Marathon Enthusiasts",
        description="Serious runners training for marathons, interested in performance gear and nutrition"
    )

    # Use across multiple campaigns
    campaign1 = scope3.create_campaign(
        brand_agent_id="ba_nike_123",
        name="Shoe Campaign",
        prompt="Promote marathon running shoes to serious runners",
        audience_ids=[audience['id']]
    )

    campaign2 = scope3.create_campaign(
        brand_agent_id="ba_nike_123",
        name="Apparel Campaign",
        prompt="Target marathon runners with performance apparel",
        audience_ids=[audience['id']]
    )
    ```

    **Synthetic Audience Features:**
    - Natural language audience creation
    - AI-enhanced with lookalike modeling
    - Continuous learning and optimization
    - Cross-campaign audience insights

  </Tab>

  <Tab title="Brand Standards">
    **Brand Standards** define your brand safety rules and content filtering preferences.

    ```python
    # Set brand safety rules for entire brand agent
    scope3.set_brand_standards(
        brand_agent_id="ba_nike_123",
        domain_blocklist=[
            "competitor1.com",
            "competitor2.com",
            "inappropriate-content.com"
        ],
        keyword_filters=[
            "scandal", "controversy", "negative-sports-news"
        ],
        content_categories=[
            "sports-positive", "fitness", "health", "motivation"
        ]
    )

    # Standards automatically apply to all campaigns
    ```

    **Brand Standards Benefits:**
    - Consistent brand safety across all campaigns
    - Automatic content filtering
    - Competitor blocking
    - Custom brand suitability rules

  </Tab>

  <Tab title="Measurement">
    **Measurement Sources** configure your analytics and conversion tracking integrations.

    ```python
    # Add Google Analytics integration
    ga_source = scope3.add_measurement_source(
        brand_agent_id="ba_nike_123",
        name="Google Analytics",
        type="analytics",
        configuration={
            "property_id": "GA-NIKE-123",
            "conversion_events": ["purchase", "newsletter_signup"]
        }
    )

    # Add Facebook Conversions API
    fb_source = scope3.add_measurement_source(
        brand_agent_id="ba_nike_123",
        name="Facebook Conversions",
        type="conversion_api",
        configuration={
            "pixel_id": "nike_fb_pixel_123",
            "access_token": "fb_token_xyz"
        }
    )
    ```

    **Measurement Benefits:**
    - Unified attribution across all campaigns
    - Multiple tracking integration support
    - Real-time performance optimization
    - Cross-platform measurement

  </Tab>
</Tabs>

## Platform Comparison

<Tabs>
  <Tab title="Scope3 Brand Agent">
    ```
    Brand Agent: Nike Global
    ├── Campaigns
    │   ├── Summer Running Campaign ($50K)
    │   ├── Basketball Campaign ($75K) 
    │   └── Training Gear Campaign ($25K)
    ├── Creatives (Shared Library)
    │   ├── Summer Running Video
    │   ├── Basketball Hero Image
    │   └── Training Gear Carousel
    ├── Synthetic Audiences (Shared)
    │   ├── Marathon Enthusiasts
    │   ├── Basketball Players  
    │   └── Fitness Beginners
    ├── Brand Standards
    │   ├── Competitor Blocking
    │   ├── Content Categories
    │   └── Keyword Filters
    └── Measurement Sources
        ├── Google Analytics
        ├── Facebook Conversions
        └── Nike Internal Analytics
    ```
  </Tab>
</Tabs>

<Tabs>
<Tab title="The Trade Desk Structure">
  ``` Advertiser: Nike Global ├── Campaign: Summer 2024 │ ├── Line Item: Running
  Shoes ($25K) │ │ ├── Creatives: Running Video, Shoe Images │ │ └── Audiences:
  Running Enthusiasts │ ├── Line Item: Marathon Gear ($25K) │ │ ├── Creatives:
  Gear Images (separate upload) │ │ └── Audiences: Marathon Runners (separate) │
  └── Brand Safety: Global Rules ├── Campaign: Basketball 2024 │ ├── Line Item:
  Shoes ($50K) │ ├── Line Item: Apparel ($25K) │ └── [Separate creative uploads
  & audiences] └── Data Partners: [Measurement integrations] ```
</Tab>

  <Tab title="DV360 Structure">
    ```
    Advertiser: Nike Global
    ├── Campaign: Q3 Sports Marketing
    │   ├── Insertion Order: Running ($50K)
    │   │   ├── Line Item: Shoes
    │   │   ├── Line Item: Apparel  
    │   │   └── Creative Assignment
    │   ├── Insertion Order: Basketball ($75K)
    │   │   ├── Line Item: Equipment
    │   │   ├── Line Item: Clothing
    │   │   └── Creative Assignment
    │   └── Audience Lists (Campaign level)
    ├── Floodlight Configuration
    └── Brand Safety (Advertiser level)
    ```
  </Tab>
</Tabs>

## Brand Agent Workflows

### Creating Your First Brand Agent

<Steps>
  <Step title="Create Brand Agent">
    Start by creating your advertiser account equivalent:
    
    <CodeGroup>
    ```python Python
    brand_agent = scope3.create_brand_agent(
        name="Nike Global",
        description="Global athletic wear and equipment brand"
    )
    brand_agent_id = brand_agent['id']  # Save this for all future operations
    ```
    
    ```javascript JavaScript
    const brandAgent = await scope3.createBrandAgent({
        name: "Nike Global", 
        description: "Global athletic wear and equipment brand"
    });
    const brandAgentId = brandAgent.id;
    ```
    
    ```bash cURL
    curl -X POST https://api.agentic.scope3.com/brand-agents \
      -H "x-scope3-api-key: YOUR_API_KEY" \
      -d '{
        "name": "Nike Global",
        "description": "Global athletic wear and equipment brand"
      }'
    ```
    </CodeGroup>
  </Step>

<Step title="Set Brand Standards">
  Configure your brand safety and content preferences: ```python
  scope3.set_brand_standards( brand_agent_id=brand_agent_id,
  domain_blocklist=["adidas.com", "competitor.com"],
  keyword_filters=["controversial", "scandal"], content_categories=["sports",
  "fitness", "motivation"] ) ```
</Step>

  <Step title="Add Measurement">
    Set up your analytics and conversion tracking:
    
    ```python  
    scope3.add_measurement_source(
        brand_agent_id=brand_agent_id,
        name="Google Analytics",
        type="analytics",
        configuration={"property_id": "GA-123"}
    )
    ```
  </Step>

<Step title="Upload Creatives">
  Add your creative assets to the shared library: ```python creative =
  scope3.create_creative( brand_agent_id=brand_agent_id, name="Hero Video",
  type="video", url="https://cdn.nike.com/hero-video.mp4" ) ```
</Step>

  <Step title="Create Campaigns">
    Launch your first agentic campaign:
    
    ```python
    campaign = scope3.create_campaign(
        brand_agent_id=brand_agent_id,
        name="Summer Launch", 
        prompt="Target fitness enthusiasts preparing for summer with our new athletic wear line",
        budget={"total": 5000000, "currency": "USD"}
    )
    ```
  </Step>
</Steps>

### Multi-Brand Management

For agencies or companies with multiple brands, create separate brand agents:

```python
# Create multiple brand agents
nike = scope3.create_brand_agent(name="Nike", description="Athletic wear")
jordan = scope3.create_brand_agent(name="Jordan", description="Basketball brand")
converse = scope3.create_brand_agent(name="Converse", description="Casual footwear")

# Each has separate campaigns, creatives, and settings
nike_campaign = scope3.create_campaign(
    brand_agent_id=nike['id'],
    name="Running Campaign",
    prompt="Target serious runners with performance gear"
)

jordan_campaign = scope3.create_campaign(
    brand_agent_id=jordan['id'],
    name="Basketball Campaign",
    prompt="Target basketball players with premium basketball shoes"
)
```

## Advanced Brand Agent Features

<AccordionGroup>
  <Accordion title="Cross-Campaign Analytics">
    Brand agents provide unified reporting across all campaigns:
    
    ```python
    # Get performance across all campaigns in brand agent
    performance = scope3.get_brand_agent_performance(
        brand_agent_id="ba_nike_123",
        date_range="last_30_days",
        metrics=["impressions", "clicks", "conversions", "cost"]
    )
    
    # Compare campaign performance within brand agent
    campaign_comparison = scope3.compare_campaigns(
        brand_agent_id="ba_nike_123",
        campaign_ids=["camp_1", "camp_2", "camp_3"]
    )
    ```
  </Accordion>

<Accordion title="Shared Resource Optimization">
  AI automatically optimizes shared resources across campaigns: - **Creative
  Performance:** High-performing creatives get more exposure across campaigns -
  **Audience Learning:** Audience performance in one campaign improves targeting
  in others - **Budget Allocation:** Budget automatically shifts to
  highest-performing campaigns - **Frequency Management:** Cross-campaign
  frequency capping prevents overexposure
</Accordion>

  <Accordion title="Brand Agent Cloning">
    Quickly set up new brand agents based on existing ones:
    
    ```python
    # Clone successful brand agent setup
    new_brand_agent = scope3.clone_brand_agent(
        source_brand_agent_id="ba_nike_123",
        name="Nike Europe",
        description="European market operations",
        include_campaigns=False,  # Only clone structure, not active campaigns
        include_creatives=True,   # Copy creative library
        include_audiences=True,   # Copy audience definitions
        include_standards=True    # Copy brand safety settings
    )
    ```
  </Accordion>
</AccordionGroup>

## Best Practices

<Tip>
**Brand Agent Organization**

✅ **Do:**

- Use descriptive names that reflect your actual business structure
- Set up brand standards immediately after creation
- Create shared audiences for common targeting profiles
- Upload high-quality creatives to the shared library

❌ **Don't:**

- Create separate brand agents for minor campaign variations
- Skip brand safety configuration - it applies to all campaigns
- Upload the same creative multiple times for different campaigns
- Use generic names that don't reflect your brand structure
  </Tip>

<Warning>
**Important Considerations**

- **Brand Agent Deletion:** Deleting a brand agent removes ALL associated campaigns, creatives, and data. This cannot be undone.
- **Resource Limits:** Each brand agent can contain up to 1000 campaigns, 10000 creatives, and unlimited audiences.
- **Cross-Brand Agent Sharing:** Resources cannot be shared between different brand agents for security and organization.
  </Warning>

## Next Steps

<CardGroup cols={2}>
  <Card
    title="Create Your First Campaign"
    icon="rocket"
    href="/quickstart/first-campaign"
  >
    Launch a campaign within your brand agent
  </Card>
  <Card title="Upload Creative Assets" icon="image" href="/concepts/creatives">
    Build your creative library for campaign use
  </Card>
  <Card
    title="Build Synthetic Audiences"
    icon="users"
    href="/concepts/targeting"
  >
    Create AI-enhanced targeting profiles
  </Card>
  <Card
    title="API Reference"
    icon="code"
    href="/api-reference/brand-agents/create"
  >
    Technical documentation for brand agent APIs
  </Card>
</CardGroup>

---

Ready to create your brand agent? [Start with our Quick Start guide →](/quickstart/first-campaign)
