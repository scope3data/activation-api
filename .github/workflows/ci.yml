name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: ".nvmrc"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Run linting
        run: npm run lint

      - name: Run tests
        run: npm test

      - name: Build project
        run: npm run build

  security:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: ".nvmrc"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Run security audit
        run: npm audit --audit-level=moderate

  openapi:
    runs-on: ubuntu-latest
    name: OpenAPI Spec Validation

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: ".nvmrc"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Generate OpenAPI spec
        run: npm run generate:openapi

      - name: Check if OpenAPI spec is up to date
        run: |
          if ! git diff --quiet openapi.yaml; then
            echo "❌ OpenAPI specification is out of date!"
            echo "The generated OpenAPI spec differs from the committed version."
            echo "Please run 'npm run generate:openapi' and commit the changes."
            echo ""
            echo "Differences found:"
            git diff openapi.yaml
            exit 1
          else
            echo "✅ OpenAPI specification is up to date!"
          fi

      - name: Validate OpenAPI spec
        run: npm run validate:openapi

  documentation:
    runs-on: ubuntu-latest
    name: Documentation Validation

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: ".nvmrc"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Check documentation links
        run: |
          BROKEN_LINKS_OUTPUT=$(npm run docs:validate:links 2>&1)
          NON_API_BROKEN_LINKS=$(echo "$BROKEN_LINKS_OUTPUT" | grep -v "/api-reference/" || true)
          
          if echo "$NON_API_BROKEN_LINKS" | grep -q " ⎿ "; then
            echo "❌ Non-API reference broken links detected!"
            echo "Please fix these broken links (excluding known API reference false positives):"
            echo "$NON_API_BROKEN_LINKS"
            exit 1
          fi
          
          API_FALSE_POSITIVES=$(echo "$BROKEN_LINKS_OUTPUT" | grep -c "/api-reference/" || echo "0")
          if [ "$API_FALSE_POSITIVES" -gt 0 ]; then
            echo "ℹ️  Note: $API_FALSE_POSITIVES API reference links flagged as broken (likely false positives)"
          fi
          
          echo "✅ Documentation links validated successfully"
